# Partners in Biz Schema

# Users
type User @table {
  id: String! @col(name: "id")
  email: String! @col(name: "email", dataType: "varchar(255)")
  displayName: String @col(name: "display_name", dataType: "varchar(100)")
  photoUrl: String @col(name: "photo_url")
  createdAt: Timestamp! @default(expr: "request.time") @col(name: "created_at")
  updatedAt: Timestamp! @default(expr: "request.time") @col(name: "updated_at")
}

# Workspaces
type Workspace @table {
  id: UUID! @default(expr: "uuidV4()")
  name: String! @col(name: "name", dataType: "varchar(100)")
  description: String @col(name: "description")
  logoUrl: String @col(name: "logo_url")
  createdBy: String! @col(name: "created_by") # FK to User
  createdAt: Timestamp! @default(expr: "request.time") @col(name: "created_at")
  updatedAt: Timestamp! @default(expr: "request.time") @col(name: "updated_at")
}

# Profiles
type Profile @table {
  id: UUID! @default(expr: "uuidV4()")
  userId: String! @col(name: "user_id") # FK to User
  name: String! @col(name: "name", dataType: "varchar(100)")
  bio: String @col(name: "bio")
  bioEmbedding: Vector @col(name: "bio_embedding", size: 768)
  avatarUrl: String @col(name: "avatar_url")
  skills: [String] @col(name: "skills")
  interests: [String] @col(name: "interests")
  isDefault: Boolean! @default(value: false) @col(name: "is_default")
  createdAt: Timestamp! @default(expr: "request.time") @col(name: "created_at")
  updatedAt: Timestamp! @default(expr: "request.time") @col(name: "updated_at")
}


type WorkspaceUser @table(name: "workspace_users", key: ["workspace", "user"]) {
  workspace: Workspace! # FK to Workspace (column name inferred)
  user: User! # FK to User (column name inferred)
  role: String! @col(name: "role", dataType: "varchar(20)") # @col is OK for primitive types
  joinedAt: Timestamp! @default(expr: "request.time") @col(name: "joined_at") # @col is OK for primitive types
}

# Workspace Members (many-to-many relationship join table)
type WorkspaceMember @table(name: "workspace_members", key: ["workspace", "user"]) {
  workspace: Workspace! # FK to Workspace (column name inferred)
  user: User! # FK to User (column name inferred)
  profile: Profile # Optional FK to Profile (column name inferred)
  role: String! @col(name: "role", dataType: "varchar(20)") # @col is OK for primitive types
  joinedAt: Timestamp! @default(expr: "request.time") @col(name: "joined_at") # @col is OK for primitive types
}

# Workspace Invitations
type WorkspaceInvitation @table {
  id: UUID! @default(expr: "uuidV4()")
  workspaceId: UUID! @col(name: "workspace_id") # FK to Workspace
  email: String! @col(name: "email", dataType: "varchar(255)")
  role: String! @col(name: "role", dataType: "varchar(20)")
  invitedBy: String! @col(name: "invited_by") # FK to User
  status: String! @col(name: "status", dataType: "varchar(20)")
  createdAt: Timestamp! @default(expr: "request.time") @col(name: "created_at")
  expiresAt: Timestamp @col(name: "expires_at")
}

# Business Profiles (One-to-One with Workspace)
type BusinessProfile @table {
  id: UUID! @default(expr: "uuidV4()")
  workspaceId: UUID! @unique @col(name: "workspace_id") # FK to Workspace
  name: String! @col(name: "name", dataType: "varchar(100)")
  industry: String @col(name: "industry", dataType: "varchar(50)")
  description: String @col(name: "description")
  descriptionEmbedding: Vector @col(name: "description_embedding", size: 768)
  location: String @col(name: "location", dataType: "varchar(100)")
  website: String @col(name: "website", dataType: "varchar(255)")
  employeeCount: Int @col(name: "employee_count")
  createdAt: Timestamp! @default(expr: "request.time") @col(name: "created_at")
  updatedAt: Timestamp! @default(expr: "request.time") @col(name: "updated_at")
}

# Partner Preferences (One-to-One with Workspace)
type PartnerPreferences @table {
  id: UUID! @default(expr: "uuidV4()")
  workspaceId: UUID! @unique @col(name: "workspace_id") # FK to Workspace
  industries: [String] @col(name: "industries")
  locations: [String] @col(name: "locations")
  minEmployeeCount: Int @col(name: "min_employee_count")
  maxEmployeeCount: Int @col(name: "max_employee_count")
  skillsNeeded: [String] @col(name: "skills_needed")
  combinedEmbedding: Vector @col(name: "combined_embedding", size: 768)
  createdAt: Timestamp! @default(expr: "request.time") @col(name: "created_at")
  updatedAt: Timestamp! @default(expr: "request.time") @col(name: "updated_at")
}

# LLM Keys
type LLMKey @table(name: "llm_keys") {
  id: UUID! @default(expr: "uuidV4()")
  entityType: String! @col(name: "entity_type", dataType: "varchar(20)")
  entityId: String! @col(name: "entity_id")
  provider: String! @col(name: "provider", dataType: "varchar(20)")
  encryptedKey: String @col(name: "encrypted_key")
  encryptionIV: String @col(name: "encryption_iv")
  config: String @col(name: "config")
  createdAt: Timestamp! @default(expr: "request.time") @col(name: "created_at")
  updatedAt: Timestamp! @default(expr: "request.time") @col(name: "updated_at")
}
